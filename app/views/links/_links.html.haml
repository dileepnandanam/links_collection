- links.each do |link|
  .link.col-lg-6.col-md-12.col-12.pull-left
    = link_to link.name, link.url.chomp, class: 'name', target: '_blank'
    = link_to URI.parse(link.url.chomp).host, link.url.chomp,  class: 'url pull-left', target: '_blank'
    = link_to 'reload', retry_link_path(link), class: 'retry pull-right', remote: true, method: :put
    = render partial: 'hide', locals: {link: link}
    - if true || link.source_url.present?
      .preview
        -if link.url.include?('xnxx.com') || link.url.include?('xvideos.com')
          = video_tag(link.source_url.to_s, name: 'media', controls: '', id: link.id, class: 'video-player')
        - elsif link.url.include? 'pornhub.com'
          .youtube-container
            %iframe{src: link.source_url.to_s, height: 315, width: 560}
            
        - elsif link.url.include? 'youtube.com'
          .youtube-container
            = youtube_embed_code(link.source_url.to_s.split('&').first)
    .tags
      - link.tags.to_s.split(' ').select(&:present?).uniq.each do |tag|
        = link_to root_path(q: tag), class: 'tag pull-left' do
          = tag
          - if current_user.try :admin?
            = link_to 'x', untag_link_path(link, tag: tag), class: 'delete-tag', method: :put, remote: true
      %input.tag.pull-left{data: {url: tag_link_path(link)}, placeholder: 'enter tag'}
      
- if links.next_page
  .more-links.load-random
    .loader
      = image_tag(asset_path 'loader.gif')
    = link_to 'View more', search_links_path(q: params[:q], page: params[:page].present? ? params[:page].to_i + 1 : 2), remote: true, class: 'view-more'